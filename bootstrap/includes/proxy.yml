---
- name: created ConfigMap with proxy whitelist
  k8s:
    kubeconfig: "{{ k8s_kubeconfig }}"
    state: present
    force: true
    definition: "{{ lookup('template', 'templates/configmap.squid.config.whitelist.yml.j2') }}"

- name: created ConfigMap with Filebeat configuration for Squid
  k8s:
    kubeconfig: "{{ k8s_kubeconfig }}"
    state: present
    force: true
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: squid.config.filebeat
        namespace: unimatrix-public
        labels:
          app.kubernetes.io/name: squid.config.filebeat
          app.kubernetes.io/part-of: logging
          app.kubernetes.io/component: beats
          ops.unimatrixone.io/env: cluster
      data:
        filebeat.yml: |-
          filebeat.inputs:
          - type: container
            paths:
              - /var/log/squid/access.log
          output.logstash:
            hosts: ["logstash:5044"]

- name: created X.509 certificate for Squid
  k8s:
    kubeconfig: "{{ k8s_kubeconfig }}"
    state: present
    definition:
      apiVersion: certmanager.k8s.io/v1alpha1
      kind: Certificate
      metadata:
        name: "x509.local.cluster.svc.unimatrix-public.proxy"
        namespace: unimatrix-public
        labels:
          app.kubernetes.io/component: pki
          app.kubernetes.io/name: "x509.local.cluster.svc.unimatrix-public.proxy"
          app.kubernetes.io/part-of: proxy
          ops.unimatrixone.io/env: cluster
        annotations: {}
      spec:
        duration: 2160h
        renewBefore: 360h
        secretName: "x509.local.cluster.svc.unimatrix-public.proxy"
        issuerRef:
          kind: ClusterIssuer
          name: default
        commonName: "proxy.{{ cluster_base_domain }}"
        dnsNames:
        - proxy
        - "proxy.unimatrix-public"
        - "proxy.unimatrix-public.svc.cluster.local"

- name: wait until the private key for the certificate is generated
  register: result
  until: result.resources and 'tls.key' in result.resources[0].data
  retries: 10
  k8s_facts:
    kubeconfig: "{{ k8s_kubeconfig }}"
    api_version: v1
    kind: Secret
    namespace: unimatrix-public
    name: "x509.local.cluster.svc.unimatrix-public.proxy"

- name: deployed Squid
  k8s:
    kubeconfig: "{{ k8s_kubeconfig }}"
    state: present
    definition:
      apiVersion: apps/v1beta1
      kind: Deployment
      metadata:
        name: squid
        namespace: unimatrix-public
        labels:
          app.kubernetes.io/name: squid
          app.kubernetes.io/part-of: proxy
          app.kubernetes.io/component: http
          ops.unimatrixone.io/env: cluster
      spec:
        replicas: "{{ http_proxy_replicas }}"
        selector:
          matchLabels: &SQUID_LABELS
            app.kubernetes.io/name: squid
            app.kubernetes.io/part-of: proxy
            app.kubernetes.io/component: http
        template:
          metadata:
            labels: *SQUID_LABELS
          spec:
            automountServiceAccountToken: false
            securityContext:
              fsGroup: 1000
              runAsGroup: 1000
              runAsUser: 1000
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: ops.unimatrixone.io/env
                      operator: In
                      values:
                      - cluster
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                      - squid
                  topologyKey: kubernetes.io/hostname
            volumes:
            - configMap:
                defaultMode: 420
                name: x509.ca.trusted
              name: ca-certificates
            - configMap:
                defaultMode: 420
                name: x509.ca.bundle
              name: ca-bundle
            - configMap:
                defaultMode: 420
                name: squid.config.whitelist
              name: whitelist
            - emptyDir: {}
              name: var
            - emptyDir: {}
              name: cache
            - emptyDir: {}
              name: log
            - secret:
                secretName: "x509.local.cluster.svc.unimatrix-public.proxy"
              name: x509
            - emptyDir: {}
              name: filebeat-data
            - configMap:
                defaultMode: 420
                name: squid.config.filebeat
              name: filebeat-config
            initContainers:
            - name: clean-state
              image: busybox
              command: ["sh", "-c", "rm -rf /var/lib/squid/*"]
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - ALL
                privileged: false
                readOnlyRootFilesystem: true
              resources:
                requests:
                  cpu: "100m"
                  memory: "128Mi"
                limits:
                  cpu: "100m"
                  memory: "128Mi"
              volumeMounts:
              - name: var
                mountPath: /var/lib/squid
            containers:
            - name: filebeat
              image: docker.elastic.co/beats/filebeat:7.3.0
              args:
              - "-c"
              - "/etc/filebeat.yml"
              - "-e"
              env:
              - name: NODE_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - ALL
                privileged: false
                readOnlyRootFilesystem: true
              resources:
                limits:
                  memory: 200Mi
                requests:
                  cpu: 100m
                  memory: 100Mi
              volumeMounts:
              - name: filebeat-config
                mountPath: /etc/filebeat.yml
                readOnly: true
                subPath: filebeat.yml
              - name: filebeat-data
                mountPath: /usr/share/filebeat/data
              - name: log
                mountPath: /var/log/squid
            - name: squid
              image: docker.io/quantumframework/squid:4.8
              imagePullPolicy: Always
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - ALL
                privileged: false
                readOnlyRootFilesystem: true
              ports:
              - name: http
                containerPort: 3128
              - name: https
                containerPort: 3129
              resources:
                limits:
                  cpu: "{{ http_proxy_cpu }}"
                  memory: "{{ http_proxy_memory }}"
                requests:
                  cpu: "{{ http_proxy_cpu }}"
                  memory: "{{ http_proxy_memory }}"
              envFrom:
              - configMapRef:
                  name: cluster.environ.common
              env:
              - name: HTTP_PROXY
                value: ""
              - name: HTTPS_PROXY
                value: ""
              - name: http_proxy
                value: ""
              - name: https_proxy
                value: ""
              volumeMounts:
              - mountPath: /usr/local/share/ca-certificates
                name: ca-certificates
                readOnly: true
              - mountPath: /usr/local/share/ca-bundle.pem
                name: ca-bundle
                readOnly: true
                subPath: ca-bundle.pem
              - mountPath: /etc/squid/whitelist.txt
                name: whitelist
                readOnly: true
                subPath: whitelist.txt
              - mountPath: /var/lib/squid
                name: var
              - mountPath: /var/cache/squid
                name: cache
              - mountPath: /var/log/squid
                name: log
              - mountPath: /etc/squid/certs
                name: x509

- name: expose service for Squid (HTTP)
  k8s:
    kubeconfig: "{{ k8s_kubeconfig }}"
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        namespace: unimatrix-public
        name: http-proxy
        labels:
          ops.unimatrixone.io/env: cluster
      spec:
        selector:
          app.kubernetes.io/part-of: proxy
          app.kubernetes.io/component: http
        ports:
          - protocol: TCP
            port: 3128

- name: expose service for Squid (HTTPS)
  k8s:
    kubeconfig: "{{ k8s_kubeconfig }}"
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        namespace: unimatrix-public
        name: http-proxy-secure
        labels:
          ops.unimatrixone.io/env: cluster
      spec:
        selector:
          app.kubernetes.io/part-of: proxy
          app.kubernetes.io/component: http
        ports:
          - protocol: TCP
            port: 3129
